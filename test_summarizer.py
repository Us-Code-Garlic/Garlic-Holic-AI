import requests
import json

def test_summarizer_api():
    """
    텍스트 요약 API를 테스트합니다.
    """
    base_url = "http://localhost:8003"
    
    # 테스트용 긴 텍스트 (100줄 정도)
    test_text = """
    인공지능(AI)은 컴퓨터 시스템이 인간의 지능을 모방하여 학습하고, 추론하고, 문제를 해결할 수 있도록 하는 기술입니다. 
    AI는 다양한 분야에서 활용되고 있으며, 그 응용 범위는 계속 확장되고 있습니다.
    
    머신러닝은 AI의 한 분야로, 컴퓨터가 데이터로부터 패턴을 학습하여 예측이나 분류를 수행하는 기술입니다. 
    머신러닝 알고리즘은 지도학습, 비지도학습, 강화학습으로 크게 나뉩니다.
    
    딥러닝은 머신러닝의 하위 분야로, 인공신경망을 사용하여 복잡한 패턴을 학습합니다. 
    딥러닝은 이미지 인식, 자연어 처리, 음성 인식 등에서 뛰어난 성능을 보여줍니다.
    
    자연어 처리(NLP)는 컴퓨터가 인간의 언어를 이해하고 처리하는 기술입니다. 
    NLP는 텍스트 분류, 감정 분석, 기계 번역, 질의응답 시스템 등에 활용됩니다.
    
    컴퓨터 비전은 컴퓨터가 이미지나 비디오에서 정보를 추출하고 이해하는 기술입니다. 
    컴퓨터 비전은 얼굴 인식, 객체 탐지, 의료 영상 분석 등에 사용됩니다.
    
    강화학습은 에이전트가 환경과 상호작용하며 보상을 최대화하는 행동을 학습하는 기술입니다. 
    강화학습은 게임 AI, 로봇 제어, 자율주행차 등에 적용됩니다.
    
    AI 윤리는 인공지능의 개발과 사용에서 발생하는 윤리적 문제를 다루는 분야입니다. 
    편향성, 투명성, 책임성, 프라이버시 등이 주요 고려사항입니다.
    
    AI의 발전은 많은 산업에 혁신을 가져왔습니다. 의료, 금융, 교육, 교통, 제조업 등 
    거의 모든 분야에서 AI 기술이 활용되고 있습니다.
    
    의료 분야에서는 AI가 질병 진단, 약물 개발, 환자 관리 등에 활용됩니다. 
    AI는 의료진의 업무를 지원하고, 더 정확한 진단을 가능하게 합니다.
    
    금융 분야에서는 AI가 사기 탐지, 리스크 관리, 투자 자문 등에 사용됩니다. 
    AI는 대량의 금융 데이터를 분석하여 패턴을 발견하고 예측을 수행합니다.
    
    교육 분야에서는 AI가 개인화된 학습, 자동 채점, 학습 분석 등에 활용됩니다. 
    AI는 학생들의 학습 패턴을 분석하여 맞춤형 교육을 제공합니다.
    
    교통 분야에서는 AI가 자율주행차, 교통 최적화, 예측 유지보수 등에 사용됩니다. 
    AI는 교통 흐름을 분석하고 안전한 운전을 지원합니다.
    
    제조업에서는 AI가 품질 관리, 예측 유지보수, 공정 최적화 등에 활용됩니다. 
    AI는 생산성을 향상시키고 비용을 절감하는 데 기여합니다.
    
    AI의 미래는 더욱 밝습니다. 기술의 발전과 함께 AI의 능력은 계속 향상될 것입니다. 
    하지만 동시에 AI의 윤리적 사용과 사회적 영향에 대한 고려도 중요합니다.
    
    AI 개발자들은 책임감을 가지고 AI를 개발해야 합니다. 
    편향성 없는 공정한 AI, 투명하고 설명 가능한 AI, 
    인간의 가치를 존중하는 AI를 만들어야 합니다.
    
    AI 교육도 중요합니다. 모든 사람이 AI의 기본 개념을 이해하고, 
    AI와 함께 일하는 방법을 배워야 합니다. 
    AI 리터러시는 미래 사회에서 필수적인 능력이 될 것입니다.
    
    정부와 기업은 AI 정책과 가이드라인을 수립해야 합니다. 
    AI의 안전하고 윤리적인 사용을 보장하는 규제가 필요합니다.
    
    국제 협력도 중요합니다. AI는 국경을 넘는 기술이므로, 
    국제적인 표준과 협약이 필요합니다.
    
    AI의 발전은 인류에게 큰 기회를 제공합니다. 
    하지만 동시에 도전과제도 존재합니다. 
    우리는 지혜롭게 AI를 활용하여 더 나은 미래를 만들어야 합니다.
    
    AI는 도구일 뿐입니다. 중요한 것은 AI를 어떻게 사용할지 결정하는 인간입니다. 
    우리의 가치관과 윤리가 AI의 방향을 결정합니다.
    
    미래의 AI는 더욱 지능적이고 유용할 것입니다. 
    하지만 AI가 인간을 대체하는 것이 아니라, 
    인간의 능력을 증강시키는 도구가 되어야 합니다.
    
    AI와 인간의 협력이 가장 이상적인 미래입니다. 
    AI의 계산 능력과 인간의 창의성과 직관이 결합될 때, 
    놀라운 결과를 만들어낼 수 있습니다.
    
    우리는 AI 시대를 살아가고 있습니다. 
    이 시대에 적응하고 성공하기 위해서는 
    지속적인 학습과 적응이 필요합니다.
    
    AI는 우리의 삶을 더욱 편리하고 풍요롭게 만들어줄 것입니다. 
    하지만 동시에 우리는 AI의 한계와 위험성도 인식해야 합니다.
    
    균형 잡힌 시각이 중요합니다. AI를 과도하게 두려워하거나, 
    과도하게 낙관적으로 바라보는 것보다는 
    현실적이고 객관적인 시각을 유지해야 합니다.
    
    AI의 발전은 계속될 것입니다. 
    우리는 이 변화에 적응하고, 
    AI와 함께 성장해야 합니다.
    
    미래는 AI와 인간이 함께 만들어가는 것입니다. 
    우리의 선택과 행동이 미래를 결정합니다.
    
    AI 기술의 발전은 놀랍습니다. 
    매일 새로운 발전이 이루어지고 있고, 
    우리의 상상을 뛰어넘는 혁신이 일어나고 있습니다.
    
    하지만 기술의 발전만큼 중요한 것은 
    그 기술을 어떻게 사용할지에 대한 지혜입니다.
    
    AI는 강력한 도구입니다. 
    이 도구를 올바르게 사용하면 
    인류의 발전에 크게 기여할 수 있습니다.
    
    우리는 AI 시대의 주역입니다. 
    우리의 책임과 역할을 인식하고, 
    미래를 위한 준비를 해야 합니다.
    
    AI와 함께하는 미래는 
    더욱 흥미롭고 도전적인 여정이 될 것입니다.
    
    우리는 이 여정을 함께 나아가야 합니다.
    """
    
    # API 테스트
    print("=== 텍스트 요약 API 테스트 ===")
    
    # 1. 서버 상태 확인
    try:
        response = requests.get(f"{base_url}/health")
        print(f"서버 상태: {response.json()}")
    except Exception as e:
        print(f"서버 연결 실패: {e}")
        return
    
    # 2. API 정보 확인
    try:
        response = requests.get(f"{base_url}/info")
        print(f"API 정보: {response.json()}")
    except Exception as e:
        print(f"API 정보 조회 실패: {e}")
    
    # 3. 텍스트 요약 테스트
    try:
        payload = {
            "text": test_text,
            "max_length": 500,
            "chunk_size": 1500,
            "chunk_overlap": 200
        }
        
        response = requests.post(f"{base_url}/summarize", json=payload)
        
        if response.status_code == 200:
            result = response.json()
            print("\n=== 요약 결과 ===")
            print(f"원본 길이: {result['original_length']}자")
            print(f"요약 길이: {result['summary_length']}자")
            print(f"압축률: {result['compression_ratio']}%")
            print(f"성공 여부: {result['success']}")
            print(f"메시지: {result['message']}")
            print(f"\n요약 내용:\n{result['summary']}")
        else:
            print(f"요약 실패: {response.status_code}")
            print(response.text)
            
    except Exception as e:
        print(f"요약 테스트 실패: {e}")

if __name__ == "__main__":
    test_summarizer_api() 